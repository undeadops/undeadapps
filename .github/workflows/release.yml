name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.4.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

      - name: Bump version and push tag
        id: bump-version-tag
        uses: anothrNick/github-tag-action@1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main

      - name: Set up yq
        uses: frenck/action-setup-yq@v1.0.1

      - name: Update Chart versions
        run: |
          yq -i '.version="${{ steps.bump-version-tag.outputs.new_tag }}"' 'charts/undeadapps/Chart.yaml'

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Helm Chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GCR_IMAGE: "ghcr.io/undeadops/undeadapps"
          HELM_EXPERIMENTAL_OCI: "1"
        run : |
          version=${{ steps.bump-version-tag.outputs.new_tag }}
          echo ${{ env.GITHUB_TOKEN }} | helm registry login ${{ env.GCR_IMAGE }} --username ${{ env.GITHUB_REPOSITORY_OWNER }} --password-stdin
          helm package charts/undeadapps --version $version
          echo pushing $(basename charts/undeadapps)-$version.tgz to oci://$GCR_IMAGE:$version
          helm push $(basename charts/undeadapps)-$version.tgz oci://$GCR_IMAGE:$version
        shell: bash
